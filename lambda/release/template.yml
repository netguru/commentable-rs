AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: provided
    Handler: rust.binary
    Timeout: 3
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type,Authorization'"

Resources:
  CommentableRsApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: Commentable.rs API Gateway
      StageName: Prod
  # POST /auth
  GoogleAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/auth
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GoogleAuthEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /auth
            Method: post
  GoogleAuthFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        GoogleAuthOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /auth
            Method: options
  # POST /commentable/:id/comments/list
  ListCommentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/list-comments
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        ListCommentsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/list
            Method: post
  ListCommentsFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        ListCommentsOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/list
            Method: options
  # POST /commentable/:id/comments/add
  AddCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/add-comment
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        AddCommentEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/add
            Method: post
  AddCommentFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        AddCommentOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/add
            Method: options
  # POST /commentable/:id/comments/edit
  EditCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/edit-comment
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        EditCommentEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/edit
            Method: post
  EditCommentFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        EditCommentOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/edit
            Method: options
  # POST /commentable/:id/comments/delete
  DeleteCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/delete-comment
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        DeleteCommentEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/delete
            Method: post
  DeleteCommentFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        DeleteCommentOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/comments/delete
            Method: options
  # POST /commentable/:id/reactions/add
  AddReactionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/add-reaction
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        AddReactionEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/reactions/add
            Method: post
  AddReactionFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        AddReactionOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/reactions/add
            Method: options
  # POST /commentable/:id/reactions/delete
  DeleteReactionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/delete-reaction
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        DeleteReactionEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/reactions/delete
            Method: post
  DeleteReactionFunctionOptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bootstraps/options
      Events:
        DeleteReactionOptionsEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref CommentableRsApi
            Path: /commentable/{id}/reactions/delete
            Method: options

  CommentableRsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CommentableRsTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: primary_key
          AttributeType: S
        - AttributeName: id
          AttributeType: S
        - AttributeName: replies_to
          AttributeType: S
        - AttributeName: comment_id
          AttributeType: S
      KeySchema:
        - AttributeName: primary_key
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: replies-index
          KeySchema:
            - AttributeName: primary_key
              KeyType: HASH
            - AttributeName: replies_to
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
        - IndexName: reactions-index
          KeySchema:
            - AttributeName: primary_key
              KeyType: HASH
            - AttributeName: comment_id
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY

Outputs:
  ProdDataEndpoint:
    Description: "API Prod stage endpoint"
    Value: !Sub "https://${CommentableRsApi}.execute-api.${AWS::Region}.amazonaws.com/Staging/"
